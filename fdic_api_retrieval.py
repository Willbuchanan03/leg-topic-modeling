# -*- coding: utf-8 -*-
"""FDIC-API-RETRIEVAL.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qcx7IOEN6Mls7ficAbk1c3GxqBLS7iGg
"""

from google.colab import drive
drive.mount('/content/drive')

'''
Beck Buchanan - Senior Thesis
Python Script for Retrieval of FDIC Data
'''
# MODULES AND LIBRARIES --------------------------------------------------------
import requests
import csv
import pandas as pd
from IPython import display

# USER INPUTS ------------------------------------------------------------------
# User Input for List of statistics to request from API
entry = ['DEPINS']

entries = []
print("Please enter desired field values. The program will return the requested \
data plus REPDATE and Firm Identifiers for your requested years into a file named\
'[YOUR_FIELD]data.csv'")

user_entry = input('Enter a field to request ')
entries.append(user_entry.upper())
while user_entry != 'done':
  print("Enter another field to request. If you have no more fields, enter 'done' ")
  user_entry = input()
  if user_entry != 'done':
    entries.append(user_entry.upper())
display.clear_output()

# Bounding the search between start_year and end_year
start_year = 1984
end_year = 2022
store_year = end_year

# File Path to Thesis Data Dump
file_path = '/content/drive/MyDrive/Thesis_Raw_Data/'

# FIXED VALUES------------------------------------------------------------------
path_tag = 'data.csv'
'''
# Uncomment this list and the item in qtr for loop if you want to retrieve
# quarterly data.
# List storing all identifiers for financial quarters
qtr = ['0331', '0630', '0930', '1231']
'''

# GENERATING REQUEST -----------------------------------------------------------

# For all four quarter tags
#for item in qtr:
for entry in entries:
    # Go through each year in the range
    field = {
        'fields': f'{entry},REPDTE,CERT',
        'sort_by': 'BKCLASS',
        'sort_order': 'ASC',
        'limit': '10000',
        'format': 'csv',
        'download': 'false',
        'filename': 'bank_data'
    }

    all_data = []  # List to store all data before writing

    while end_year >= start_year:
        # Format date properly as YYYYMMDD
        date_str = f"{end_year}1231"
        url = f"https://banks.data.fdic.gov/api/financials?filters=BKCLASS:N AND REPDTE:{date_str}"

        try:
            print(f"Requesting data for {date_str}...")
            r = requests.get(url, params=field)
            r.raise_for_status()

            # Check if we got any data
            data = r.text.splitlines()
            if len(data) > 1:  # More than just header
                all_data.extend(data if end_year == store_year else data[1:])
                print(f"Successfully retrieved {len(data)-1} records for {end_year}")
                display.clear_output()

            else:
                print(f"No data found for {end_year}")

        except requests.exceptions.RequestException as e:
            print(f"Error retrieving data for {end_year}: {e}")

        end_year -= 1

    # Write all collected data at once
    if all_data:
        entry_path = file_path + f'{entry}' + path_tag
        with open(entry_path, 'w', newline='') as f:
            f.write('\n'.join(all_data))
        print(f"Wrote {len(all_data)} lines to {entry_path}")

    # Reset year for next field
    end_year = store_year